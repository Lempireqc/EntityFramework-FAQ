Kind,Url,Title,Description,Pinned
Devmate,http://devmate.net/2017/12/entity-framework-improve-query-performance-potential-problems/,"Entity Framework - improve query performance - potential problems","This the first post from series where I am going to describe ways to create more performant queries using an Entity Framework 6.",1
Devmate,http://devmate.net/2017/11/entity-framework-contains-on-empty-collection/,"Entity Framework - Contains() on empty collection.","SQL query that is generated when you make a contains on an empty collection",1
Devmate,http://devmate.net/2017/10/entity-framework-the-query-plan-cache-story/,"Entity Framework - the query plan cache story","Investigation of performance issues in an application with Entity Framework as data access technology.",1
.Net,https://blogs.msdn.microsoft.com/dotnet/2017/10/26/entity-framework-6-2-runtime-released/,"Entity Framework 6.2 Runtime Released","Entity Framework (EF) is Microsoft's traditional object/relational mapper (O/RM) for .NET Framework.",1
.Net,https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-entity-framework-core-2-0/,"Announcing Entity Framework Core 2.0","Entity Framework (EF) Core is the lightweight, extensible, and cross-platform version of Entity Framework, the popular Object/Relational Mapping (O/RM) framework for .NET.",1
.Net,https://blogs.msdn.microsoft.com/dotnet/2017/06/28/announcing-ef-core-2-0-preview-2/,"Announcing EF Core 2.0 Preview 2","EF Core follows the same release cycle as .NET Core but can be used in multiple .NET platforms, including .NET Core 2.0 and .NET Framework 4.6.1 or newer.",
.Net,https://blogs.msdn.microsoft.com/dotnet/2017/05/23/announcing-ef-6-2-beta-1/,"Announcing EF 6.2 beta 1","EF 6.2 is a new iteration of Microsoft's more traditional object/relational mapper for .NET Framework.",
.Net,https://blogs.msdn.microsoft.com/dotnet/2017/05/12/announcing-ef-core-2-0-preview-1/,"Announcing EF Core 2.0 Preview 1","EF Core follows the same release cycle as .NET Core but can be used in multiple .NET platforms, including .NET Core 2.0 and .NET Framework 4.6 or newer.",
.Net,https://blogs.msdn.microsoft.com/dotnet/2016/09/29/implementing-seeding-custom-conventions-and-interceptors-in-ef-core-1-0/,"Implementing Seeding, Custom Conventions and Interceptors in EF Core 1.0","Entity Framework Core (EF Core) is a lightweight and extensible version of the Entity Framework (EF) data access technology which is cross-platform and supports multiple database providers.",1
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-1-remote-query,"Entity Framework/Core and LINQ to Entities (1) Remote Query","This chapter discusses a different kind of LINQ technology, LINQ to Entities, which queries relational data managed by databases.",1
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-2-modeling-database-object-relational-mapping,"Entity Framework/Core and LINQ to Entities (2) Modeling Database: Object-Relational Mapping","Object-relational mapping is a popular technology to map and convert between application data objects and database relational data.",1
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-3-logging-and-tracing-queries,"Entity Framework/Core and LINQ to Entities (3) Logging and Tracing Queries","To understand how EF/Core work with databases, it is important to uncover the actual underlying operations to the SQL database, which can be traced or logged in C# application side and in SQL database.",1
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-4-query-methods,"Entity Framework/Core and LINQ to Entities (4) Query Methods (Operators)","This part discusses how to query SQL database with the defined mapping entities. In EF/Core, LINQ to Entities supports most of the methods provided by Queryable",
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-5-query-translation-implementation,"Entity Framework/Core and LINQ to Entities (5) Query Translation Implementation","This part discusses how the translation is implemented. Regarding different database systems can have different query languages or different query APIs, EF/Core implement a provider model to work with different kinds of databases.",
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-6-query-data-loading,"Entity Framework/Core and LINQ to Entities (6) Query Data Loading","After translated to SQL, in LINQ to Entities, sequence queries returning IQueryable implements deferred execution too.",
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-7-data-changes-and-transactions,"Entity Framework/Core and LINQ to Entities (7) Data Changes and Transactions","Besides LINQ to Entities queries, EF/Core also provides rich APIs for data changes, with imperative paradigm.",
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-8-optimistic-concurrency,"Entity Framework/Core and LINQ to Entities (8) Optimistic Concurrency","Conflicts can occur if the same data is read and changed concurrently. Generally, there are 2 concurrency control approaches: Pessimistic concurrency and Optimistic concurrency.",
Dixin,https://weblogs.asp.net/dixin/entity-framework-core-and-linq-to-entities-9-performance,"Entity Framework/Core and LINQ to Entities (9) Performance","This part discusses some aspects that can impact the performance of EF/Core and LINQ to Entities,",
TonySneed,https://blog.tonysneed.com/2017/10/01/trackable-entities-for-ef-core/,"It's here! Trackable Entities for EF Core!"," Trackable Entities project track changes to an object graph as you update, add and remove items, then send those changes to a back end service where they can be saved in a single transaction. ",1
TonySneed,https://blog.tonysneed.com/2014/08/01/ef-6-x-code-first-and-model-first-with-trackable-entities-2-1/,"EF 6.x Code-First and Model-First with Trackable Entities 2.1","The advantage of the consolidated designer is that you can pick and choose which tables you want, versus generating classes for all the tables in your database",1
TonySneed,https://blog.tonysneed.com/2014/05/28/real-world-mvvm-with-entity-framework-and-asp-net-web-api/,"Real-World MVVM with Entity Framework and ASP.NET Web API","I just completed a sample application using Simple MVVM Toolkit together with Trackable Entities to build a real-world N-Tier solution with a WPF client and portable POCO entities that are automatically change-tracked and sent to an ASP.NET Web API service that uses Entity Framework to perform asynchronous CRUD operations.",1
TonySneed,https://blog.tonysneed.com/2014/04/28/become-an-n-tier-ninja-with-trackable-entities-2-0/,"Become an N-Tier Ninja with Trackable Entities 2.0","Taking a cue from Julie Lerman and Scott Hanselman, I've decided to dub version 2.0 of my Trackable Entities framework, the Ninja Edition.",
TonySneed,https://blog.tonysneed.com/2014/02/20/trackable-entities-now-with-repository-and-unit-of-work/,"Trackable Entities - Now with Repository and Unit of Work","With inquires on the project discussion forum, and some prompting by my friend Long Le, who authored the Generic Unit of Work and Repository Framework, I decided to add support to my framework for using Repository and Unit of Work design patterns.",
TonySneed,https://blog.tonysneed.com/2013/11/18/trackable-entities-versus-self-tracking-entities/,"Trackable Entities versus Self-Tracking Entities","In this blog post I'd like to perform an in-depth comparison between my own Trackable Entities framework and the now deprecated Self-Tracking Entities, written by the Entity Framework team at Microsoft.",
TonySneed,https://blog.tonysneed.com/2013/11/17/api-improvements-in-trackable-entities-v1-01/,"API Improvements in Trackable Entities v1.01","I'd like to announce version 1.01 of Trackable Entities, which fixes a few issues and adds two methods to the API: AcceptChanges and MergeChanges",
TonySneed,https://blog.tonysneed.com/2013/11/05/trackable-entities-version-1-0-released/,"Trackable Entities Version 1.0 Released!","I am pleased to announce the release of Trackable Entities version 1.0 - with support for both WCF and ASP.NET Web API with Visual Studio 2012 and 2013!",
TonySneed,https://blog.tonysneed.com/2013/04/27/trackable-entities-n-tier-entity-framework/,"Trackable Entities: N-Tier Support for Entity Framework","Writing N-Tier apps can get complicated fast. Consider the assortment of n-tier technologies now consigned to the ash heap of history: WCF RIA Services, Self-Tracking Entities, and good old typed DataSets.",
TonySneed,https://blog.tonysneed.com/2010/04/21/webinar-n-tier-entity-framework-with-dtos/,"Webinar: N-Tier Entity Framework with DTOs","I recently delivered a free webinar for DevelopMentor on n-tier application development using Entity Framework 4.0.",
JetBrains,https://blog.jetbrains.com/dotnet/2017/08/09/running-entity-framework-core-commands-rider/,"Running Entity Framework (Core) commands in Rider","How can we run Entity Framework commands like adding migrations or updating the database, in Rider?",1
JetBrains,https://blog.jetbrains.com/dotnet/2013/01/08/webinar-when-hadi-met-julie-a-story-of-entity-framework-resharper-a-spaniard-and-the-data-farm-queen/,"Webinar - When Hadi Met Julie: A Story of Entity Framework, ReSharper, a Spaniard and The Data Farm Queen","When Hadi tried to create an Entity Framework app, he realized just how bad of a noob he really was (not surprising). He then decided to call on a favor to Julie, the Data Farm Queen.",1
Telerik,https://www.telerik.com/blogs/asp-net-ajax-controls-entity-framework-6,"Telerik ASP.NET AJAX Controls and Entity Framework 6 - Buttery Smoothness","Microsoft didn't provide support for the Entity Framework Data Source in ASP.NET when the updated Entity Framework 6 (EF6) framework released. In this article, Jeff Fritz shows you how Telerik is supporting the recently released EF6 support for ASP.NET web forms.",1
Telerik,https://www.telerik.com/blogs/using-entity-framework-with-telerik-reporting-and-report-designer-(obsolete),"Using Entity Framework with Telerik Reporting and Report Designer (OBSOLETE)","This article outlines how to use newer versions of Entity Framework (EF) with Telerik Reporting as well as the stand-alone Telerik Report Designer.",1
Telerik,https://www.telerik.com/blogs/connecting-telerik-reporting-to-sql-azure-via-entity-framework,"Connecting Telerik Reporting to SQL Azure via Entity Framework","In this blog post from the series we discussed how to connect Telerik Reporting to a SQL Azure database using Open Access ORM with the OpenAccessDataSource component.",1
Telerik,https://www.telerik.com/blogs/master-details-with-radgridview-for-silverlight-4-wcf-ria-services-rc2-and-entity-framework-4-0,"Master-Details with RadGridView for Silverlight 4, WCF RIA Services RC2 and Entity Framework 4.0","I have prepared a sample project with the Silverlight 4 version of RadGridView released yesterday. The sample project was created with Visual Studio 2010, WCF RIA Services RC 2 for Visual Studio 2010, and ADO.NET Entity Framework (.NET 4).",
Telerik,https://www.telerik.com/blogs/connecting-the-dots-ado-net-data-services-and-telerik-reporting,"Connecting the Dots: ADO.NET Data Services and Telerik Reporting","ADO.NET Data Services (formerly Astoria) is one of the new technologies released as part of v3.5 SP1 of the .NET Framework. If you haven't tried this new addition to the framework, I highly suggest you give it a spin. It's very cool and allows you to quickly and easily set up RESTful WCF services with which your application can interact with the database. ",
Telerik,https://www.telerik.com/blogs/two-new-radtips-episodes-radgrid-entity-framework-and-more,"Two New RadTips Episodes: RadGrid, Entity Framework, and More!","I'm happy to announce two new episode of RadTips, a series of screencasts offering tips and tricks for using Telerik's RadControls",
CSharpCorner,http://www.c-sharpcorner.com/blogs/verify-database-prior-to-data-insertion-using-ef,"Verify Database Prior To Data Insertion Using EF","This blogs talks about how to verify DB schema before doing insert operation via Entity Framework.",1
CSharpCorner,http://www.c-sharpcorner.com/blogs/logging-database-operations-to-file-in-entity-framework-6,"Logging Database Operations To File In Entity Framework 6","Here, you will learn how to log the database operation to files in Entity Framework 6",1
CSharpCorner,http://www.c-sharpcorner.com/blogs/how-to-validate-the-entity-framework-generated-database-connection-string-before-starting-an-application,"How To Validate The Entity Framework Generated Database Connection String Before Starting An Application","Here we going to discuss, how to validate the entity framework generated database connection string in c# before starting an application.",1
CSharpCorner,http://www.c-sharpcorner.com/blogs/access-stored-procedure-with-user-defined-data-type-using-entity-framework2,"Access Stored Procedure With User Defined Data Type Using Entity Framework","Accessing table value type in Entity Framework",
CSharpCorner,http://www.c-sharpcorner.com/blogs/entity-vs-model-vs-viewmodel-vs-datamodel,"Entity Vs Model Vs ViewModel Vs DataModel","Different people define Entity, Model, ViewModel and DataModel in different ways. However, these terms may sometimes differ from their actual meaning, based upon the context.",
CSharpCorner,http://www.c-sharpcorner.com/blogs/colored-entities-with-entityframework,"Colored Entities With EntityFramework","In this blog, we are going to see how to apply the colors for the entities in an Entity Framework.",
CSharpCorner,http://www.c-sharpcorner.com/blogs/generic-repository-pattern-with-webapi-and-entity-framework,"Generic Repository Pattern With Web-API And Entity Framework","Repository pattern represents Don't repeat yourself, So now, we will see how the code is avoided by repeating ourselves.",
CSharpCorner,http://www.c-sharpcorner.com/blogs/implement-database-first-approach-with-entity-framework,"Implement Database First Approach with Entity Framework","In this blog, we going to learn about the database first approach. If we want to perform business operations with the existing database",
CSharpCorner,http://www.c-sharpcorner.com/technologies/entityframework-blogs,"Code First Approach Using Entity Framework","In this blog, you will learn about Code First Approach, using Entity Framework.",
CSharpCorner,http://www.c-sharpcorner.com/blogs/overview-of-entity-framework,"Overview Of Entity Framework","In this blog, you will learn about Entity Framework.",
CSharpCorner,http://www.c-sharpcorner.com/blogs/how-to-create-web-api-using-entity-framework-with-linq-query-in-mvc-4-net,"Creating Web API Using Entity Framework With LINQ Query In MVC 4","In this blog I am showing how to create Web API using Entity Framework with LINQ Query in .NET MVC 4.",
OneUnicorn,https://blog.oneunicorn.com/2017/09/25/many-to-many-relationships-in-ef-core-2-0-part-4-a-more-general-abstraction/,"Many-to-many relationships in EF Core 2.0 - Part 4: A more general abstraction","In the last few posts we saw how to hide use of the join entity from two entities with a many-to-many relationship. This post doesn't add any additional functionality, it just abstracts some of what we saw so it can be re-used more easily.",
OneUnicorn,https://blog.oneunicorn.com/2017/09/25/many-to-many-relationships-in-ef-core-2-0-part-3-hiding-as-icollection/,"Many-to-many relationships in EF Core 2.0 - Part 3: Hiding as ICollection","In the previous post we ended up with entities that hide the join entity from the public surface. However, it was not possible to add or removed entities through this public surface. To enable this we need an ICollection implementation that acts as a true facade over the real join entity collection and delegates all responsibilities to that collection.",
OneUnicorn,https://blog.oneunicorn.com/2017/09/25/many-to-many-relationships-in-ef-core-2-0-part-2-hiding-as-ienumerable/,"Many-to-many relationships in EF Core 2.0 - Part 2: Hiding as IEnumerable ","In the previous post we looked at how many-to-many relationships can be mapped using a join entity. In this post we'll make the navigation properties to the join entity private so that they don't appear in the public surface of our entity types. ",
OneUnicorn,https://blog.oneunicorn.com/2017/09/25/many-to-many-relationships-in-ef-core-2-0-part-1-the-basics/,"Many-to-many relationships in EF Core 2.0 - Part 1: The basics ","As of EF Core 2.0, many-to-many relationships without an explicitly mapped join table are not supported. However, all is not lost. ",1
OneUnicorn,https://blog.oneunicorn.com/2016/11/17/add-attach-update-and-remove-methods-in-ef-core-1-1/,"Add, Attach, Update, and Remove methods in EF Core 1.1","EF Core provides a variety of ways to start tracking entities or change their state. This post gives a brief overview of the different approaches.",1
OneUnicorn,https://blog.oneunicorn.com/2016/11/17/ef-core-1-1-looking-at-your-model-in-the-debugger/,"EF Core 1.1: Looking at your model in the debugger","As developers on the EF team it is often useful to see what is in the metadata model. To facilitate this, the model and all other metadata elements are able to generate a debug view which provides lots of useful information about the metadata in a terse but human-readable form.",1
OneUnicorn,https://blog.oneunicorn.com/2016/11/16/notification-entities-in-ef-core-1-1/,"Notification entities in EF Core 1.1","By default, EF Core uses snapshot change tracking. However, if entity types implement INotifyPropertyChanged and optionally INotifyPropertyChanging, then EF can use these notifications to avoid the overhead of creating snapshots and detecting changes.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/11/so-you-want-to-write-an-ef-core-provider/,"So you want to write an EF Core provider","Writing a database provider for EF Core can be daunting. I have written several posts over the last month containing information you need to know when writing a provider. This post pulls all that together to give an overview of the different building blocks with links to previous posts containing the details.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/10/implementing-provider-extension-methods-in-ef-core-1-1/,"Implementing provider extension methods in EF Core 1.1","This post showed the extension methods used by providers to add provider-specific functionality to EF. This post describes how to implement those methods. This post is aimed at provider writers or those who may want to contribute to the EF Core source code.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/09/internal-code-in-ef-core-1-1/,"Internal code in EF Core 1.1","There is very little code in EF Core that is truely internal. Instead, code that would traditionally have been internal has been made public but documented as internal. This post looks at what this means for application developers and how you can use this code responsibly.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/09/ef-core-1-1-metadata-overview/,"EF Core 1.1 metadata overview","This post provides a high-level overview of metadata structure and APIs in EF Core 1.1. It covers the core metadata interfaces and shows how they are extended with particular focus on provider extensions.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/03/implementing-a-provider-use-method-for-ef-core-1-1/,"Implementing a provider Use... method for EF Core 1.1","The previous post contained lots of information about how dependency injection works with database providers. This post adds more to the provider story by explaining how to implement a method like UseSqlServer that allows applications to select the provider to use.",
OneUnicorn,https://blog.oneunicorn.com/2016/11/01/ef-core-dependency-injection-internals/,"EF Core Dependency Injection Internals ","A previous post gave an overview of how dependency injection is used internally by EF Core, and how applications might interact with this. In this post we will look at some of the internal details. This post is aimed at provider writers and people who may want to contribute to the EF source code.",
OneUnicorn,https://blog.oneunicorn.com/2016/10/28/collection-navigation-properties-and-fields-in-ef-core-1-1/,"Collection navigation properties and fields in EF Core 1.1","There has recently been some confusion about what mappings are supported for collection navigation properties in EF Core. This post is an attempt to clear things up.",
OneUnicorn,https://blog.oneunicorn.com/2016/10/27/dependency-injection-in-ef-core-1-1/,"Dependency Injection in EF Core 1.1","EF Core can interact with dependency injection in two ways: a container can be used to create DbContext instances and EF uses a D.I. container internally for its own services",
OneUnicorn,https://blog.oneunicorn.com/2016/10/24/ef-core-1-1-creating-dbcontext-instances/,"EF Core 1.1 - Creating DbContext instances","This post describes the different ways to create and configure instances of DbContext in EF Core 1.1.",
OneUnicorn,https://blog.oneunicorn.com/2015/05/07/ef7-provider-building-blocks-2/,"EF7 Provider Building Blocks","In this post I'll outline the basic building blocks needed for an EF7 provider. The idea is not to show how everything should be implemented, but rather to show what pieces are needed and how they fit together.",
OneUnicorn,https://blog.oneunicorn.com/2014/02/15/ef-6-1-creating-indexes-with-indexattribute/,"EF 6.1: Creating indexes with IndexAttribute","Since EF 4.3 it has been possible to use CreateIndex and DropIndex in Code First Migrations to create and drop indexes. However this had to be done manually by editing the migration because the index was not included anywhere in the Code First model.",
OneUnicorn,https://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/,"EF 6.1: Turning on logging without recompiling ","I already blogged about SQL logging in EF6. Part 3 of that series shows how to use EF with a logging framework such as NLog. If you do this then you can easily switch logging on and off using NLog or equivalent without any changes to the app.",
OneUnicorn,https://blog.oneunicorn.com/2013/05/14/ef6-sql-logging-part-3-interception-building-blocks/,"EF6 SQL Logging - Part 3: Interception building blocks","In parts 1 and 2 of this series we looked at how to use DbContext.Database.Log to log the SQL generated by EF. But this code is actually a relatively thin facade over some low-level building blocks for interception in general and, in this case, DbCommand interception in particular.",
OneUnicorn,https://blog.oneunicorn.com/2013/05/09/ef6-sql-logging-part-2-changing-the-contentformatting/,"EF6 SQL Logging - Part 2: Changing the content/formatting","In part 1 we saw how DbContext.Database.Log can be used to easily log SQL to the console or some other TextWriter. This post covers how the context and formatting of the output can be changed.",
OneUnicorn,https://blog.oneunicorn.com/2013/05/08/ef6-sql-logging-part-1-simple-logging/,"EF6 SQL Logging - Part 1: Simple Logging","On the EF team we made a late decision to add some support for interception and logging of generated SQL in EF6.",
OneUnicorn,https://blog.oneunicorn.com/2013/03/11/ef6-nested-types-and-more-for-code-first/,"EF6: Nested types and more for Code First","Ever since POCO support was introduced in EF4 there have been two limiting restrictions on the types that can be mapped",
OneUnicorn,https://blog.oneunicorn.com/2012/10/05/ef-enums-and-spatial-types-on-net-4/,"EF enums and spatial types on .NET 4","In EF5 some features (such as enums and spatial types) are only available when targeting .NET 4.5. This is because EF5 relies on core EF libraries in the .NET Framework. With EF6 this changes because the core EF code is now included in EntityFramework.dll and recent commits to the code make all EF features (except async) available on .NET 4.",
OneUnicorn,https://blog.oneunicorn.com/2012/10/01/ef6-extensibility-and-configuration/,"EF6 Extensibility and Configuration","The idea is that people who are interested in where EF is going can read posts like this and provide feedback on the direction, design, and implementation. Providing this kind of feedback is an important way to contribute to EF without even having to write any code.",
OneUnicorn,https://blog.oneunicorn.com/2012/07/19/so-you-want-to-contribute-to-ef-part-4-developer-experience/,"So you want to contribute to EF? Part 4: Developer experience","This is the fourth part of a series providing some background to those who may want make contributes to the Entity Framework. In this post I'll talk a bit about maintaining a good experience for the developers who use EF.",
OneUnicorn,https://blog.oneunicorn.com/2012/07/19/so-you-want-to-contribute-to-ef-part-3-testing/,"So you want to contribute to EF? Part 3: Testing","This is the third part of a series providing some background to those who may want make contributes to the Entity Framework. This post will cover the types of tests that at exist and expectations around writing new tests.",
OneUnicorn,https://blog.oneunicorn.com/2012/07/19/so-you-want-to-contribute-to-ef-part-2-the-code/,"So you want to contribute to EF? Part 2: The code","This is the second part of a series providing some background to those who may want make contributes to the Entity Framework. This post will cover the high-level organization of the code describing the assemblies created and some of the namespaces used.",
OneUnicorn,https://blog.oneunicorn.com/2012/07/19/so-you-want-to-contribute-to-ef-part-1-introduction/,"So you want to contribute to EF? Part 1: Introduction","As you have probably heard the Entity Framework source code is now available under an open source license. This means that the EF team are ready and excited to take your contributions.",
OneUnicorn,https://blog.oneunicorn.com/2012/07/19/why-open-sourcing-entity-framework-is-a-great-move/,"Why open sourcing Entity Framework is a great move","You have likely heard by now that the Entity Framework source code has been released under an open source license. I'm a developer on the EF team and I'd like to give you my perspective on this.",
OneUnicorn,https://blog.oneunicorn.com/2012/06/02/deleting-orphans-with-entity-framework/,"Deleting orphans with Entity Framework","A  required relationship means that the child cannot exist without a parent, and if the parent is deleted or the relationship between the child and the parent is severed, then the child becomes orphaned. In such situations it is often useful to have the orphaned child automatically deleted.",
OneUnicorn,https://blog.oneunicorn.com/2012/05/03/the-key-to-addorupdate/,"The key to AddOrUpdate","The DbSet.Find method provides an easy way to lookup an entity given its primary key. One place this can be useful is in an AddOrUpdate method when loading an entity which can then be updated with values from another application tier",
OneUnicorn,https://blog.oneunicorn.com/2012/04/22/code-first-model-builder-versions/,"Code First model builder versions","Code First's convention-based approach to building a model has some interesting implications for breaking changes between different versions of EF. This post describes those implications and shows how model builder versions can be used to deal with potential breaking changes while still retaining a forward-moving developer experience.",
OneUnicorn,https://blog.oneunicorn.com/2012/04/21/code-first-building-blocks/,"Code First Building Blocks","There are plenty of examples out there showing how to use DbContext to create a Code First model. But DbContext itself uses some fundamental Code First building blocks to do its stuff. This post shows how these building blocks can be used directly, which can be useful in situations where you need more control over how the model is created or cached.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/26/code-first-data-annotations-on-non-public-properties/,"Code First Data Annotations on non-public properties","The Entity Framework supports mapping to public, protected, internal, and private properties. However, there are a few restrictions when mapping to non-public properties. and there are also some things you need to know when attempting to configure such mappings using Code First.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/24/ef5-rejecting-changes-to-a-single-property/,"EF5: Rejecting changes to a single property","There is one little feature you may not have heard about the ability to reject changes to an individual property. That is, to reset the IsModified flag of a property such that the value of that property will not be sent to the database.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/13/secrets-of-detectchanges-part-4-binary-properties-and-complex-types/,"Secrets of DetectChanges Part 4: Binary properties and complex types","In this post we're going to look at some corner cases around complex types and binary properties. While these are corner cases its still worth knowing about them so they don't catch you out if you ever run into them.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/12/secrets-of-detectchanges-part-3-switching-off-automatic-detectchanges/,"Secrets of DetectChanges Part 3: Switching off automatic DetectChanges","In this part we'll look at how automatic calls to DetectChanges can be switched off and what you then need to do differently in your code.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/11/secrets-of-detectchanges-part-2-when-is-detectchanges-called-automatically/,"Secrets of DetectChanges Part 2: When is DetectChanges called automatically?","This part will expand on that information and look at when it is important for the context to know about these changes. This will provide the basis for detailing when the context calls DetectChanges automatically.",
OneUnicorn,https://blog.oneunicorn.com/2012/03/10/secrets-of-detectchanges-part-1-what-does-detectchanges-do/,"Secrets of DetectChanges Part 1: What does DetectChanges do?","Entity Framework change tracking is often something that doesn't require too much thought from the app developer. However, change tracking and the DetectChanges method are a part of the stack where there is a tension between ease-of-use and performance.",
OneUnicorn,https://blog.oneunicorn.com/2012/02/27/code-first-migrations-making-__migrationhistory-not-a-system-table/,"Code First Migrations: Making __MigrationHistory not a system table","Code First Migrations uses a table called __MigrationHistory as a place to store metadata about the migrations that have been applied to the database. Code First creates this table when it creates a database or when migrations are enabled.",
OneUnicorn,https://blog.oneunicorn.com/2012/02/26/dont-use-code-first-by-mistake/,"Don't use Code First by mistake","EF Code First is great and I use it all the time, even when mapping to existing databases. However, if your intention is to use a Database First flow, then it's important that you don't start to use Code First unintentionally.",
OneUnicorn,https://blog.oneunicorn.com/2012/02/11/why-entity-framework-is-releasing-on-nuget-only/,"Why Entity Framework is releasing on NuGet only","EF 4.2 and 4.3 were released via NuGet only and there are no MSI installers. The up-coming EF 5.0 release will continue this pattern. But why NuGet and why only NuGet? It's not because NuGet is awesome, even though it is, or because it's the hot new thing, even though it is. It's because it is a great match for delivering the EF runtime.",

